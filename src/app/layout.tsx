import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import {storyblokInit, apiPlugin} from "@storyblok/react";
import { StoryblokProvider } from "@/components/StoryblokProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "admin",
  description: "Generated by create next app",
};

const cachedFetch = (input: any, init?:any) => {
  return fetch(input, {
    ...init,
    cache: "no-store",
  })
}

storyblokInit({
  accessToken:process.env.STORYBLOK_TOKEN,
  use: [apiPlugin],
  apiOptions: {
    fetch: cachedFetch,
  }
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <StoryblokProvider>
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div>Navbar Layout</div>
        {children}
      </body>
    </html>
    </StoryblokProvider>
  );
}
